#!/bin/sh
# ------------------------------------------------------
#	Base Twig
#	(c) 2016 Inkton
#
#	the data model
#		forest [1 .. n]
#			tree [1 .. n]
#				nest [1 .. n]
#					cushion [1 .. n]
#						twig [1 .. n]
#
#

set -xv

source $NEST_FOLDER/utils/prefix

nest() {
	if [ -z "$NEST_OPERATION" ]; then
		# default operation is create
		NEST_OPERATION=create
	fi
	eval $NEST_OPERATION
}

create() {

	# -------------------------------------
	#
	# The pre-reqs for creation
	#
	#	1 - logged in as root
	#	2 - users admin and webuser exist
	#	3 - a db and schema create script 
	#	4 - the app folders
	#	5 - the app registry
	#	6 - clear of prev install
	#

	yell "Confirming app pre-requisits ..."
	try cd $NEST_HOME

	yell "-> The app registry"

	if [ ! -f $NEST_APP_REGISTRY_PATH ]; then
		die "The app rejistry $NEST_APP_REGISTRY_PATH must exist"
	fi

	NEST_CUSHION_APP=$(jq -r '.installed.application.name' $NEST_APP_REGISTRY_PATH)
	NEST_CUSHION_APP_VERSION=$(jq -r '.installed.application.version' $NEST_APP_REGISTRY_PATH)
	NEST_CUSHION_LANGUAGE_FRAMEWORK=$(jq -r '.installed.framework.name' $NEST_APP_REGISTRY_PATH)
	NEST_CUSHION_LANGUAGE_FRAMEWORK_VERSION=$(jq -r '.installed.framework.version' $NEST_APP_REGISTRY_PATH)
	NEST_CUSHION_LANGUAGE=$(jq -r '.installed.language.name' $NEST_APP_REGISTRY_PATH)
	NEST_CUSHION_LANGUAGE_VERSION=$(jq -r '.installed.language.version' $NEST_APP_REGISTRY_PATH)

	if [[ ! -z "$NEST_CUSHION_APP" || \
			! -z "$NEST_CUSHION_APP_VERSION" || \
			! -z "$NEST_CUSHION_LANGUAGE_FRAMEWORK" || \
			! -z "$NEST_CUSHION_LANGUAGE_FRAMEWORK_VERSION" || \
			! -z "$NEST_CUSHION_LANGUAGE" || \
			! -z "$NEST_CUSHION_LANGUAGE_VERSION" ]];then
		die "Remove the existing application first"
	fi

	try cp "$NEST_FOLDER/cushions/$NEST_USE_CUSHION.cushion" "$NEST_HOME/app.nest"
	"$NEST_HOME/app.nest"
}

destroy() {
:	"NEST_OPERATION=remove $NEST_HOME/app.nest"
	"NEST_OPERATION=destroy $NEST_HOME/app.nest"
	rm -rf "$NEST_HOME/app.nest"
}

nest
